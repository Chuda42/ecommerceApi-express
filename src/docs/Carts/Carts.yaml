paths:
  /api/carts/:
    get:
      summary: Returns the IDs of all carts.
      tags:
        - Carts
      responses:
        "200":
          description: Cart IDs successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      type: string
                    example: ["cart1", "cart2", "cart3"]

    post:
      summary: Create a new void cart.
      tags:
        - Carts
      responses:
        "200":
          description: Cart successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Cart created


  /api/carts/{cid}:
    get:
      summary: Get products in a cart by cart ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to retrieve products from.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Products in the cart successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductConID'
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message

    put:
      summary: Update products in a cart by cart ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to update products in.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductIDandQuantity'
      responses:
        "200":
          description: Products in the cart successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Many products added to cart {cid}
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message
      description: |
        Precondition:
        - The user must be authenticated.
        - The user must be user or premium.

    delete:
      summary: Delete all products from a cart by cart ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to delete products from.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: All products deleted from the cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: All products deleted from cart {cid}
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Add a product to a cart by cart ID and product ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to add the product to.
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: ID of the product to add to the cart.
          required: true
          schema:
            type: string
      requestBody:
        required: false
      responses:
        "200":
          description: Product added to the cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product {pid} added to cart {cid}
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message
      
      description: |
        Precondition:
          - The user must be authenticated.
          - The user must be user or premium.
          - The user must be the owner of cart.


    put:
      summary: Update the quantity of a product in a cart by cart ID and product ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to update the product quantity in.
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: ID of the product to update the quantity in the cart.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: The new quantity of the product in the cart.
                  example: 2
                  minimum: 1
      responses:
        "200":
          description: Product quantity in the cart updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product {pid} quantity updated in cart {cid}
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message
      description: |
        Precondition:
          - The user must be authenticated.
          - The user must be user or premium.
          - The user must be the owner of cart.

    delete:
      summary: Delete a product from a cart by cart ID and product ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to delete the product from.
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: ID of the product to delete from the cart.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product deleted from the cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product {pid} deleted from cart {cid}
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message
      description: |
        Precondition:
          - The user must be authenticated.
          - The user must be user or premium.
          - The user must be the owner of cart.

  /api/carts/{cid}/purchase/:
    post:
      summary: Purchase a cart by cart ID.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: ID of the cart to purchase.
          required: true
          schema:
            type: string
      requestBody:
        required: false
      responses:
        "200":
          description: Cart purchased successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Cart {cid} purchased
                  payload:
                    type: object
                    properties:
                      productsNotProcessed:
                        description: The products that were not processed.
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductConID'
        "400":
          description: Invalid request or error occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Error message
      description: |
        Send an confimation email to the user.

        Precondition:
          - The user must be authenticated.
          - The user must be user or premium.
          - The user must be the owner of cart.



components:
  schemas:
    ProductConID:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
        code:
          type: string
        thumbnails:
          type: array
          items:
            type: string
        category:
          type: string
        status:
          type: string
        owner:
          type: string
      required:
        - id
        - title
        - description
        - code
        - category
        - price
        - stock

    ProductIDandQuantity:
      type: object
      properties:
        productId:
          type: string
          description: The unique identifier of the product.
          example: "abc123"
        quantity:
          type: integer
          description: The quantity of the product.
          example: 3
      required:
        - productId
        - quantity